# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: defines.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='defines.proto',
  package='perfuse',
  syntax='proto2',
  serialized_pb=_b('\n\rdefines.proto\x12\x07perfuse\"@\n\x08\x46ileInfo\x12\x10\n\x08\x66ilename\x18\x01 \x02(\t\x12\x0c\n\x04size\x18\x02 \x02(\x05\x12\x14\n\x0clastmodified\x18\x03 \x02(\t\"H\n\tChunkInfo\x12\x0c\n\x04hash\x18\x01 \x02(\t\x12\x10\n\x08\x66ilename\x18\x02 \x02(\t\x12\x0e\n\x06offset\x18\x03 \x02(\x05\x12\x0b\n\x03len\x18\x04 \x02(\x05*j\n\nMethodType\x12\x0f\n\x0bGETFILEINFO\x10\x00\x12\x10\n\x0cGETCHUNKDATA\x10\x01\x12\r\n\tGETHASHES\x10\x02\x12\x0e\n\nWRITECHUNK\x10\x03\x12\x07\n\x03NOP\x10\x04\x12\x11\n\rVIVALDIUPDATE\x10\x05')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_METHODTYPE = _descriptor.EnumDescriptor(
  name='MethodType',
  full_name='perfuse.MethodType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='GETFILEINFO', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GETCHUNKDATA', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GETHASHES', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WRITECHUNK', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOP', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VIVALDIUPDATE', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=166,
  serialized_end=272,
)
_sym_db.RegisterEnumDescriptor(_METHODTYPE)

MethodType = enum_type_wrapper.EnumTypeWrapper(_METHODTYPE)
GETFILEINFO = 0
GETCHUNKDATA = 1
GETHASHES = 2
WRITECHUNK = 3
NOP = 4
VIVALDIUPDATE = 5



_FILEINFO = _descriptor.Descriptor(
  name='FileInfo',
  full_name='perfuse.FileInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='filename', full_name='perfuse.FileInfo.filename', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='size', full_name='perfuse.FileInfo.size', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lastmodified', full_name='perfuse.FileInfo.lastmodified', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=26,
  serialized_end=90,
)


_CHUNKINFO = _descriptor.Descriptor(
  name='ChunkInfo',
  full_name='perfuse.ChunkInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hash', full_name='perfuse.ChunkInfo.hash', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filename', full_name='perfuse.ChunkInfo.filename', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='perfuse.ChunkInfo.offset', index=2,
      number=3, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='len', full_name='perfuse.ChunkInfo.len', index=3,
      number=4, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=164,
)

DESCRIPTOR.message_types_by_name['FileInfo'] = _FILEINFO
DESCRIPTOR.message_types_by_name['ChunkInfo'] = _CHUNKINFO
DESCRIPTOR.enum_types_by_name['MethodType'] = _METHODTYPE

FileInfo = _reflection.GeneratedProtocolMessageType('FileInfo', (_message.Message,), dict(
  DESCRIPTOR = _FILEINFO,
  __module__ = 'defines_pb2'
  # @@protoc_insertion_point(class_scope:perfuse.FileInfo)
  ))
_sym_db.RegisterMessage(FileInfo)

ChunkInfo = _reflection.GeneratedProtocolMessageType('ChunkInfo', (_message.Message,), dict(
  DESCRIPTOR = _CHUNKINFO,
  __module__ = 'defines_pb2'
  # @@protoc_insertion_point(class_scope:perfuse.ChunkInfo)
  ))
_sym_db.RegisterMessage(ChunkInfo)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
